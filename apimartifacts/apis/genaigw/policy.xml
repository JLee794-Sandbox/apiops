<policies>
    <inbound>
        <!-- Validate Azure AD Token -->
        <validate-azure-ad-token tenant-id="{{entra-tenant-id}}">
            <client-application-ids>
                <application-id>{{entra-frontend-client-id}}</application-id>
            </client-application-ids>
        </validate-azure-ad-token>
        
        <!-- Pass Managed Identity Token to Backend Services -->
        <authentication-managed-identity resource="https://cognitiveservices.azure.com" output-token-variable-name="managed-id-access-token" ignore-error="false" />
        
        <!-- Set Authorization Header with Managed Identity Token -->
        <set-header name="Authorization" exists-action="override">
            <value>@("Bearer " + (string)context.Variables["managed-id-access-token"])</value>
        </set-header>
        
        <!-- Set Backend Service -->
        <set-backend-service id="supercool-backend-pool" backend-id="openai-backend-pool" />
        
        <!-- Azure OpenAI Token Limit -->
        <azure-openai-token-limit tokens-per-minute="10000" counter-key="@(context.Subscription.Id)" estimate-prompt-tokens="true" tokens-consumed-header-name="consumed-tokens" remaining-tokens-header-name="remaining-tokens" />
        
        <!-- Emit Token Metric for Azure OpenAI -->
        <azure-openai-emit-token-metric>
            <dimension name="Subscription ID" />
            <dimension name="Client IP address" value="@(context.Request.IpAddress)" />
            <dimension name="API ID" />
        </azure-openai-emit-token-metric>
        
        <!-- Semantic Cache Lookup for Azure OpenAI -->
        <azure-openai-semantic-cache-lookup score-threshold="0.8" embeddings-backend-id="embeddings-backend" embeddings-backend-auth="system-assigned" />
        
        <base />
    </inbound>
    
    <backend>
        <!-- Retry Policy for Backend Requests -->
        <retry condition="@(context.Response.StatusCode == 429)" count="3" interval="1" first-fast-retry="true">
            <forward-request buffer-request-body="true" />
        </retry>
    </backend>
    
    <outbound>
        <base />
    </outbound>
    
    <on-error>
        <base />
    </on-error>
</policies>