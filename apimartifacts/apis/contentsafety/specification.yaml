openapi: 3.0.1
info:
  title: ContentSafety
  description: Analyze harmful content
  version: '1.0'
servers:
  - url: https://apim-prem-ncus.azure-api.net/contentsafety
paths:
  /image:analyze:
    post:
      summary: Analyze Image
      description: 'A synchronous API for the analysis of potentially harmful image content. Currently, it supports four categories: Hate, SelfHarm, Sexual, and Violence.'
      operationId: ImageOperations_AnalyzeImage
      parameters:
        - name: api-version
          in: query
          description: The API version to use for this operation.
          required: true
          schema:
            minLength: 1
            type: string
      requestBody:
        description: The image analysis request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeImageOptions'
            example:
              image:
                content: string
                blobUrl: string
              categories:
                - Hate
              outputType: FourSeverityLevels
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeImageResult'
              example:
                categoriesAnalysis:
                  - category: Hate
                    severity: 0
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /text/blocklists:
    get:
      summary: Get All Text Blocklists
      description: Get all text blocklists details.
      operationId: TextBlocklists_ListTextBlocklists
      parameters:
        - name: api-version
          in: query
          description: The API version to use for this operation.
          required: true
          schema:
            minLength: 1
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedTextBlocklist'
              example:
                value:
                  - blocklistName: string
                    description: string
                nextLink: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/blocklists/{blocklistName}':
    get:
      summary: Get Text Blocklist By blocklistName
      description: Returns text blocklist details.
      operationId: TextBlocklists_GetTextBlocklist
      parameters:
        - name: blocklistName
          in: path
          description: Text blocklist name.
          required: true
          schema:
            maxLength: 64
            pattern: '^[0-9A-Za-z._~-]+$'
            type: string
        - name: api-version
          in: query
          description: The API version to use for this operation.
          required: true
          schema:
            minLength: 1
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextBlocklist'
              example:
                blocklistName: string
                description: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    patch:
      summary: Create Or Update Text Blocklist
      description: 'Updates a text blocklist. If the blocklistName does not exist, a new blocklist will be created.'
      operationId: TextBlocklists_CreateOrUpdateTextBlocklist
      parameters:
        - name: blocklistName
          in: path
          description: Text blocklist name.
          required: true
          schema:
            maxLength: 64
            pattern: '^[0-9A-Za-z._~-]+$'
            type: string
        - name: api-version
          in: query
          description: The API version to use for this operation.
          required: true
          schema:
            minLength: 1
            type: string
      requestBody:
        description: The resource instance.
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/TextBlocklistCreateOrUpdate'
            example:
              blocklistName: string
              description: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextBlocklist'
              example:
                blocklistName: string
                description: string
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextBlocklist'
              example:
                blocklistName: string
                description: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    delete:
      summary: Delete Text Blocklist By blocklistName
      description: Deletes a text blocklist.
      operationId: TextBlocklists_DeleteTextBlocklist
      parameters:
        - name: blocklistName
          in: path
          description: Text blocklist name.
          required: true
          schema:
            maxLength: 64
            pattern: '^[0-9A-Za-z._~-]+$'
            type: string
        - name: api-version
          in: query
          description: The API version to use for this operation.
          required: true
          schema:
            minLength: 1
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
          content:
            application/json: { }
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/blocklists/{blocklistName}:addOrUpdateBlocklistItems':
    post:
      summary: Add or update BlocklistItems To Text Blocklist
      description: Add or update blocklistItems to a text blocklist. You can add or update at most 100 blocklistItems in one request.
      operationId: TextBlocklists_AddOrUpdateBlocklistItems
      parameters:
        - name: blocklistName
          in: path
          description: Text blocklist name.
          required: true
          schema:
            maxLength: 64
            pattern: '^[0-9A-Za-z._~-]+$'
            type: string
        - name: api-version
          in: query
          description: The API version to use for this operation.
          required: true
          schema:
            minLength: 1
            type: string
      requestBody:
        description: Options for adding or updating blocklist items.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrUpdateTextBlocklistItemsOptions'
            example:
              blocklistItems:
                - blocklistItemId: string
                  description: string
                  text: string
                  isRegex: true
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOrUpdateTextBlocklistItemsResult'
              example:
                blocklistItems:
                  - blocklistItemId: string
                    description: string
                    text: string
                    isRegex: true
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/blocklists/{blocklistName}:removeBlocklistItems':
    post:
      summary: Remove BlocklistItems From Text Blocklist
      description: Remove blocklistItems from a text blocklist. You can remove at most 100 BlocklistItems in one request.
      operationId: TextBlocklists_RemoveBlocklistItems
      parameters:
        - name: blocklistName
          in: path
          description: Text blocklist name.
          required: true
          schema:
            maxLength: 64
            pattern: '^[0-9A-Za-z._~-]+$'
            type: string
        - name: api-version
          in: query
          description: The API version to use for this operation.
          required: true
          schema:
            minLength: 1
            type: string
      requestBody:
        description: Options for removing blocklist items.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTextBlocklistItemsOptions'
            example:
              blocklistItemIds:
                - string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
          content:
            application/json: { }
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/blocklists/{blocklistName}/blocklistItems':
    get:
      summary: Get All BlocklistItems By blocklistName
      description: Get all blocklistItems in a text blocklist.
      operationId: TextBlocklists_ListTextBlocklistItems
      parameters:
        - name: blocklistName
          in: path
          description: Text blocklist name.
          required: true
          schema:
            maxLength: 64
            pattern: '^[0-9A-Za-z._~-]+$'
            type: string
        - name: api-version
          in: query
          description: The API version to use for this operation.
          required: true
          schema:
            minLength: 1
            type: string
        - name: top
          in: query
          description: Format - int32. The number of result items to return.
          schema:
            type: integer
            format: int32
        - name: skip
          in: query
          description: Format - int32. The number of result items to skip.
          schema:
            type: integer
            format: int32
            default: 0
        - name: maxpagesize
          in: query
          description: Format - int32. The maximum number of result items per page.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedTextBlocklistItem'
              example:
                value:
                  - blocklistItemId: string
                    description: string
                    text: string
                    isRegex: true
                nextLink: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/blocklists/{blocklistName}/blocklistItems/{blocklistItemId}':
    get:
      summary: Get BlocklistItem By blocklistName And blocklistItemId
      description: Get blocklistItem by blocklistName and blocklistItemId from a text blocklist.
      operationId: TextBlocklists_GetTextBlocklistItem
      parameters:
        - name: blocklistName
          in: path
          description: Text blocklist name.
          required: true
          schema:
            maxLength: 64
            pattern: '^[0-9A-Za-z._~-]+$'
            type: string
        - name: blocklistItemId
          in: path
          description: 'The service will generate a BlocklistItemId, which will be a UUID.'
          required: true
          schema:
            maxLength: 64
            type: string
        - name: api-version
          in: query
          description: The API version to use for this operation.
          required: true
          schema:
            minLength: 1
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextBlocklistItem'
              example:
                blocklistItemId: string
                description: string
                text: string
                isRegex: true
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /text:analyze:
    post:
      summary: Analyze Text
      description: 'A synchronous API for the analysis of potentially harmful text content. Currently, it supports four categories: Hate, SelfHarm, Sexual, and Violence.'
      operationId: TextOperations_AnalyzeText
      parameters:
        - name: api-version
          in: query
          description: The API version to use for this operation.
          required: true
          schema:
            minLength: 1
            type: string
      requestBody:
        description: The text analysis request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeTextOptions'
            example:
              text: string
              categories:
                - Hate
              blocklistNames:
                - string
              haltOnBlocklistHit: true
              outputType: FourSeverityLevels
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeTextResult'
              example:
                blocklistsMatch:
                  - blocklistName: string
                    blocklistItemId: string
                    blocklistItemText: string
                categoriesAnalysis:
                  - category: Hate
                    severity: 0
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /text:detectProtectedMaterial:
    post:
      summary: Detect Protected Material for Text
      description: A synchronous API for detecting protected material in the given text.
      operationId: TextOperations_DetectTextProtectedMaterial
      parameters:
        - name: api-version
          in: query
          description: The API version to use for this operation.
          required: true
          schema:
            minLength: 1
            type: string
      requestBody:
        description: 'The request body to be detected, which may contain protected material.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectTextProtectedMaterialOptions'
            example:
              text: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectTextProtectedMaterialResult'
              example:
                protectedMaterialAnalysis:
                  detected: true
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /text:shieldPrompt:
    post:
      summary: Shield Prompt
      description: A synchronous API for shielding prompt from direct and indirect injection attacks.
      operationId: TextOperations_ShieldPrompt
      parameters:
        - name: api-version
          in: query
          description: The API version to use for this operation.
          required: true
          schema:
            minLength: 1
            type: string
      requestBody:
        description: 'The request body to be detected, which may contain direct or indirect injection attacks.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShieldPromptOptions'
            example:
              userPrompt: string
              documents:
                - string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShieldPromptResult'
              example:
                userPromptAnalysis:
                  attackDetected: true
                documentsAnalysis:
                  - attackDetected: true
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
components:
  schemas:
    AddOrUpdateTextBlocklistItemsOptions:
      required:
        - blocklistItems
      type: object
      properties:
        blocklistItems:
          type: array
          items:
            $ref: '#/components/schemas/TextBlocklistItem'
          description: Array of blocklistItems to add.
          x-ms-identifiers: [ ]
      description: The request to add blocklistItems to a text blocklist.
    AddOrUpdateTextBlocklistItemsResult:
      required:
        - blocklistItems
      type: object
      properties:
        blocklistItems:
          type: array
          items:
            $ref: '#/components/schemas/TextBlocklistItem'
          description: Array of blocklistItems have been added.
          x-ms-identifiers: [ ]
      description: The response of adding blocklistItems to the text blocklist.
    AnalyzeImageOptions:
      required:
        - image
      type: object
      properties:
        image:
          $ref: '#/components/schemas/ImageData'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/ImageCategory'
          description: 'The categories will be analyzed. If they are not assigned, a default set of analysis results for the categories will be returned.'
        outputType:
          enum:
            - FourSeverityLevels
          type: string
          description: 'This refers to the type of image analysis output. If no value is assigned, the default value will be "FourSeverityLevels".'
          default: FourSeverityLevels
          x-ms-enum:
            name: AnalyzeImageOutputType
            modelAsString: true
            values:
              - name: FourSeverityLevels
                value: FourSeverityLevels
                description: 'Output severities in four levels, the value could be 0,2,4,6.'
      description: The image analysis request.
    AnalyzeImageResult:
      required:
        - categoriesAnalysis
      type: object
      properties:
        categoriesAnalysis:
          type: array
          items:
            $ref: '#/components/schemas/ImageCategoriesAnalysis'
          description: Analysis result for categories.
          x-ms-identifiers: [ ]
      description: The image analysis response.
    AnalyzeTextOptions:
      required:
        - text
      type: object
      properties:
        text:
          maxLength: 10000
          type: string
          description: The text to be analyzed. We support a maximum of 10k Unicode characters (Unicode code points) in the text of one request.
        categories:
          type: array
          items:
            $ref: '#/components/schemas/TextCategory'
          description: 'The categories will be analyzed. If they are not assigned, a default set of analysis results for the categories will be returned.'
        blocklistNames:
          type: array
          items:
            type: string
          description: The names of blocklists.
        haltOnBlocklistHit:
          type: boolean
          description: 'When set to true, further analyses of harmful content will not be performed in cases where blocklists are hit. When set to false, all analyses of harmful content will be performed, whether or not blocklists are hit.'
        outputType:
          enum:
            - FourSeverityLevels
            - EightSeverityLevels
          type: string
          description: 'This refers to the type of text analysis output. If no value is assigned, the default value will be "FourSeverityLevels".'
          default: FourSeverityLevels
          x-ms-enum:
            name: AnalyzeTextOutputType
            modelAsString: true
            values:
              - name: FourSeverityLevels
                value: FourSeverityLevels
                description: 'Output severities in four levels, the value could be 0,2,4,6.'
              - name: EightSeverityLevels
                value: EightSeverityLevels
                description: 'Output severities in eight levels, the value could be 0,1,2,3,4,5,6,7.'
      description: The text analysis request.
    AnalyzeTextResult:
      required:
        - categoriesAnalysis
      type: object
      properties:
        blocklistsMatch:
          type: array
          items:
            $ref: '#/components/schemas/TextBlocklistMatch'
          description: The blocklist match details.
          x-ms-identifiers: [ ]
        categoriesAnalysis:
          type: array
          items:
            $ref: '#/components/schemas/TextCategoriesAnalysis'
          description: Analysis result for categories.
          x-ms-identifiers: [ ]
      description: The text analysis response.
    Azure.Core.Foundations.Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: One of a server-defined set of error codes.
        message:
          type: string
          description: A human-readable representation of the error.
        target:
          type: string
          description: The target of the error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/Azure.Core.Foundations.Error'
          description: An array of details about specific errors that led to this reported error.
          x-ms-identifiers: [ ]
        innererror:
          $ref: '#/components/schemas/Azure.Core.Foundations.InnerError'
      description: The error object.
    Azure.Core.Foundations.ErrorResponse:
      required:
        - error
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Azure.Core.Foundations.Error'
      description: A response containing error details.
    Azure.Core.Foundations.InnerError:
      type: object
      properties:
        code:
          type: string
          description: One of a server-defined set of error codes.
        innererror:
          $ref: '#/components/schemas/Azure.Core.Foundations.InnerError'
      description: An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.
    DetectTextProtectedMaterialOptions:
      required:
        - text
      type: object
      properties:
        text:
          type: string
          description: 'The text to be analyzed, which may contain protected material. The characters will be counted in Unicode code points.'
      description: The request of detecting potential protected material present in the given text.
    DetectTextProtectedMaterialResult:
      required:
        - protectedMaterialAnalysis
      type: object
      properties:
        protectedMaterialAnalysis:
          $ref: '#/components/schemas/TextProtectedMaterialAnalysisResult'
      description: The combined detection results of potential protected material.
    DocumentInjectionAnalysisResult:
      required:
        - attackDetected
      type: object
      properties:
        attackDetected:
          type: boolean
          description: Whether a potential injection attack is detected or not.
      description: The individual analysis result of potential injection attacks in the given documents.
    ImageCategoriesAnalysis:
      required:
        - category
      type: object
      properties:
        category:
          $ref: '#/components/schemas/ImageCategory'
        severity:
          type: integer
          description: 'The value increases with the severity of the input content. The value of this field is determined by the output type specified in the request. The output type could be ‘FourSeverityLevels’, and the output value can be 0, 2, 4, 6.'
          format: int32
      description: Image analysis result.
    ImageCategory:
      enum:
        - Hate
        - SelfHarm
        - Sexual
        - Violence
      type: string
      description: The harm category supported in Image content analysis.
      x-ms-enum:
        name: ImageCategory
        modelAsString: true
        values:
          - name: Hate
            value: Hate
            description: The harm category for Image - Hate.
          - name: SelfHarm
            value: SelfHarm
            description: The harm category for Image - SelfHarm.
          - name: Sexual
            value: Sexual
            description: The harm category for Image - Sexual.
          - name: Violence
            value: Violence
            description: The harm category for Image - Violence.
    ImageData:
      type: object
      properties:
        content:
          type: string
          description: The Base64 encoding of the image.
          format: byte
        blobUrl:
          type: string
          description: The blob url of the image.
          format: uri
      description: 'The image can be either base64 encoded bytes or a blob URL. You can choose only one of these options. If both are provided, the request will be refused. The maximum image size is 2048 x 2048 pixels and should not exceed 4 MB, while the minimum image size is 50 x 50 pixels.'
    PagedTextBlocklist:
      required:
        - value
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TextBlocklist'
          description: The TextBlocklist items on this page
          x-ms-identifiers: [ ]
        nextLink:
          type: string
          description: The link to the next page of items
          format: uri
      description: Paged collection of TextBlocklist items
    PagedTextBlocklistItem:
      required:
        - value
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TextBlocklistItem'
          description: The TextBlocklistItem items on this page
          x-ms-identifiers: [ ]
        nextLink:
          type: string
          description: The link to the next page of items
          format: uri
      description: Paged collection of TextBlocklistItem items
    RemoveTextBlocklistItemsOptions:
      required:
        - blocklistItemIds
      type: object
      properties:
        blocklistItemIds:
          type: array
          items:
            type: string
          description: Array of blocklistItemIds to remove.
      description: The request to remove blocklistItems from a text blocklist.
    ShieldPromptOptions:
      type: object
      properties:
        userPrompt:
          type: string
          description: 'The user prompt to be analyzed, which may contain direct injection attacks.'
        documents:
          type: array
          items:
            type: string
          description: 'The documents to be analyzed, which may contain direct or indirect injection attacks.'
      description: The request of analyzing potential direct or indirect injection attacks.
    ShieldPromptResult:
      type: object
      properties:
        userPromptAnalysis:
          $ref: '#/components/schemas/UserPromptInjectionAnalysisResult'
        documentsAnalysis:
          type: array
          items:
            $ref: '#/components/schemas/DocumentInjectionAnalysisResult'
          description: Direct and indirect injection attacks analysis result for the given documents.
          x-ms-identifiers: [ ]
      description: The combined analysis results of potential direct or indirect injection attacks.
    TextBlocklist:
      required:
        - blocklistName
      type: object
      properties:
        blocklistName:
          maxLength: 64
          pattern: '^[0-9A-Za-z._~-]+$'
          type: string
          description: Text blocklist name.
          x-ms-mutability:
            - read
            - create
        description:
          maxLength: 1024
          type: string
          description: Text blocklist description.
      description: Text Blocklist.
    TextBlocklistCreateOrUpdate:
      type: object
      properties:
        blocklistName:
          maxLength: 64
          pattern: '^[0-9A-Za-z._~-]+$'
          type: string
          description: Text blocklist name.
          x-ms-mutability:
            - read
            - create
        description:
          maxLength: 1024
          type: string
          description: Text blocklist description.
      description: Text Blocklist.
    TextBlocklistItem:
      required:
        - blocklistItemId
        - text
      type: object
      properties:
        blocklistItemId:
          maxLength: 64
          type: string
          description: 'The service will generate a BlocklistItemId, which will be a UUID.'
          readOnly: true
        description:
          maxLength: 1024
          type: string
          description: BlocklistItem description.
        text:
          maxLength: 128
          type: string
          description: BlocklistItem content. The length is counted using Unicode code point.
        isRegex:
          type: boolean
          description: An optional properties indicating whether this item is to be matched as a regular expression.
      description: Item in a TextBlocklist.
    TextBlocklistMatch:
      required:
        - blocklistName
        - blocklistItemId
        - blocklistItemText
      type: object
      properties:
        blocklistName:
          maxLength: 64
          type: string
          description: The name of the matched blocklist.
        blocklistItemId:
          maxLength: 64
          type: string
          description: The ID of the matched item.
        blocklistItemText:
          maxLength: 128
          type: string
          description: The content of the matched item.
      description: The result of blocklist match.
    TextCategoriesAnalysis:
      required:
        - category
      type: object
      properties:
        category:
          $ref: '#/components/schemas/TextCategory'
        severity:
          type: integer
          description: 'The value increases with the severity of the input content. The value of this field is determined by the output type specified in the request. The output type could be ‘FourSeverityLevels’ or ‘EightSeverity Levels’, and the output value can be 0, 2, 4, 6 or 0, 1, 2, 3, 4, 5, 6, or 7.'
          format: int32
      description: Text analysis result.
    TextCategory:
      enum:
        - Hate
        - SelfHarm
        - Sexual
        - Violence
      type: string
      description: The harm category supported in Text content analysis.
      x-ms-enum:
        name: TextCategory
        modelAsString: true
        values:
          - name: Hate
            value: Hate
            description: The harm category for Text - Hate.
          - name: SelfHarm
            value: SelfHarm
            description: The harm category for Text - SelfHarm.
          - name: Sexual
            value: Sexual
            description: The harm category for Text - Sexual.
          - name: Violence
            value: Violence
            description: The harm category for Text - Violence.
    TextProtectedMaterialAnalysisResult:
      required:
        - detected
      type: object
      properties:
        detected:
          type: boolean
          description: Whether potential protected material is detected or not.
      description: The individual detection result of potential protected material.
    UserPromptInjectionAnalysisResult:
      required:
        - attackDetected
      type: object
      properties:
        attackDetected:
          type: boolean
          description: Whether a potential injection attack is detected or not.
      description: The individual analysis result of potential injection attacks in the given user prompt.
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]